package com.example.composebusinesscard

import android.graphics.drawable.Drawable
import android.os.Bundle
import android.view.View
import android.widget.ImageView
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.Email
import androidx.compose.material.icons.rounded.Call
import androidx.compose.material.icons.rounded.Email
import androidx.compose.material.icons.rounded.Menu
import androidx.compose.material.icons.rounded.Person
import androidx.compose.material.icons.rounded.Phone
import androidx.compose.material3.Icon
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.scale
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.res.stringResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.composebusinesscard.ui.theme.ComposeBusinessCardTheme


class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            ComposeBusinessCardTheme {
                // A surface container using the 'background' color from the theme
                Surface(
                    modifier = Modifier
                        .fillMaxSize()
                        .background(Color.Cyan)

                ) {
                    val myAppIcons = Icons.Rounded
                    ComposeBusinessCard()
                }
            }
        }
    }
}

@Composable
fun ComposeBusinessCard() {
    Column (horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.SpaceEvenly, modifier = Modifier) {
        ComposeTextTop()
        ComposeTextBottom()
    }
}

@Composable
fun ComposeTextTop() {
    TopSection(
        name = stringResource(id = R.string.name),
        title = stringResource(id = R.string.title)
    )
}

@Composable
fun ComposeTextBottom() {
    BottomSection(
        social = stringResource(id = R.string.social),
        phone = stringResource(id = R.string.phone),
        email = stringResource(id = R.string.email),
    )
}

@Composable
fun TopSection(name: String, title: String, modifier: Modifier = Modifier) {
    val logo = painterResource(id = R.drawable.android_logo)
    Column (horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.SpaceEvenly){
        Image(
            painter = logo,
            contentDescription = null,
            modifier = modifier
                .scale(0.6f)

        )
        Text(
            text = name,
            fontSize = 35.sp,
            fontWeight = FontWeight.Bold

        )
        Text(
            text = title,
            fontSize = 20.sp,
            color = Color(0xFF3ddc84)
        )
    }
}

@Composable
fun BottomSection(social: String, phone: String, email: String, modifier: Modifier = Modifier) {
    Column(verticalArrangement = Arrangement.Bottom, modifier = Modifier,) {
//        modifier.padding(top = 200.dp, bottom = 100.dp)
        Row(horizontalArrangement = Arrangement.SpaceAround, verticalAlignment = Alignment.CenterVertically, modifier = Modifier) {
            Icon(
                Icons.Rounded.Phone, contentDescription = "Localized description", Modifier
                    .scale(1f)
                    .padding(bottom = 15.dp)
//                    .padding(start  = 25.dp, end = 30.dp, bottom = 30.dp, top = 30.dp)
            )
            Text(text = phone, Modifier.padding(start = 20.dp, bottom = 15.dp))

        }
        Row(horizontalArrangement = Arrangement.Start, verticalAlignment = Alignment.CenterVertically, modifier = Modifier) {
            Icon(
                Icons.Rounded.Person, contentDescription = "Localized description",Modifier
                    .scale(1f)
                    .padding(bottom = 15.dp)
//                    .padding(start  = 25.dp, end = 30.dp, bottom = 30.dp, top = 30.dp)
            )
            Text(text = social, Modifier.padding(start = 20.dp, bottom = 15.dp))

        }
        Row(horizontalArrangement = Arrangement.Start, verticalAlignment = Alignment.CenterVertically, modifier = Modifier) {
            Icon(
                Icons.Rounded.Email, contentDescription = "Localized description", Modifier
                    .scale(1f)
                    .padding(top =2.dp)
//                    .padding(start  = 25.dp, end = 30.dp, bottom = 30.dp, top = 30.dp)

            )
            Text(text = email, Modifier.padding(start = 20.dp))
        }

    }
}


@Preview(showBackground = true, showSystemUi = true)
@Composable
fun GreetingPreview() {
    ComposeBusinessCardTheme {
        val myAppIcons = Icons.Rounded
        ComposeBusinessCard()
    }
}
